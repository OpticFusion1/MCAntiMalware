package optic_fusion1.mcantimalware.transformer;

import java.net.InetAddress;

import org.bukkit.event.server.ServerListPingEvent;
import org.bukkit.util.CachedServerIcon;

import me.yamakaja.runtimetransformer.annotation.Inject;
import me.yamakaja.runtimetransformer.annotation.InjectionType;
import me.yamakaja.runtimetransformer.annotation.Transform;
import optic_fusion1.mcantimalware.AntiMalwareAPI;
import optic_fusion1.mcantimalware.exceptions.FormattedSecurityException;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.CallerInfo;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.RuntimeUtils;

@Transform(ServerListPingEvent.class)
public class ServerListPingEventTransformer extends ServerListPingEvent {

  public ServerListPingEventTransformer(InetAddress address, String motd, int numPlayers, int maxPlayers) {
    super(address, motd, numPlayers, maxPlayers);
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void setServerIcon(CachedServerIcon icon) throws IllegalArgumentException, UnsupportedOperationException {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalwareAPI.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    throw null;
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void setMaxPlayers(int maxPlayers) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalwareAPI.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    throw null;
  }

  @Inject(InjectionType.INSERT)
  @Override
  public void setMotd(String motd) {
    CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
    if (callerInfo != null) {
      if (AntiMalwareAPI.getInstance().getCheckManager().isPluginJarBlacklisted(callerInfo.getPlugin().getJar())) {
        throw new FormattedSecurityException("File: {0} is most likely malicious", callerInfo.getPlugin().getJar());
      }
    }
    throw null;
  }

}
