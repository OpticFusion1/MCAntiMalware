/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.utils;

import java.io.*;

public final class IOUtils {

  private IOUtils() {
  }

  public static String toString(InputStream input, String encoding) throws IOException {
    StringBuilderWriter sw = new StringBuilderWriter();
    copy(input, sw, encoding);
    return sw.toString();
  }

  public static void copy(InputStream input, Writer output, String inputEncoding) throws IOException {
    InputStreamReader in = new InputStreamReader(input, inputEncoding);
    copy(in, output);
  }

  public static int copy(Reader input, Writer output) throws IOException {
    long count = copyLarge(input, output);
    if (count > 2147483647L) {
      return -1;
    }
    return (int) count;
  }

  public static long copyLarge(Reader input, Writer output) throws IOException {
    return copyLarge(input, output, new char[4096]);
  }

  public static long copyLarge(Reader input, Writer output, char[] buffer) throws IOException {
    long count = 0L;
    int n;
    while (-1 != (n = input.read(buffer))) {
      output.write(buffer, 0, n);
      count += n;
    }
    return count;
  }
}
