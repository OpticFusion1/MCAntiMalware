/*
 * Copyright 2019 samuelcampos.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 		http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package optic_fusion1.antimalware.utils.usbdetector.unmounters;

import optic_fusion1.antimalware.utils.usbdetector.process.CommandExecutor;

import java.io.IOException;

import static optic_fusion1.antimalware.AntiMalware.LOGGER;
import static optic_fusion1.antimalware.utils.I18n.tl;

public abstract class LinuxAndOSXStorageDeviceUnmounterBase extends AbstractStorageDeviceUnmounter {

  protected void unmount(String unmountCommand) {
    try ( CommandExecutor commandExecutor = new CommandExecutor(unmountCommand)) {
      Thread.sleep(1000L);
      commandExecutor.processOutput(LOGGER::info);
      LOGGER.debug(tl("usb_detector_unmount_success", unmountCommand));
    } catch (IOException | InterruptedException e) {
      LOGGER.info(tl("usb_detector_unmount_fail", unmountCommand));
      LOGGER.exception(e);
    }
  }
}
