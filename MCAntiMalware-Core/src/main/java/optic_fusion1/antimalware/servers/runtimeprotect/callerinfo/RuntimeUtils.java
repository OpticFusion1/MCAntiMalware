/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.servers.runtimeprotect.callerinfo;

import optic_fusion1.antimalware.AntiMalware;
import optic_fusion1.antimalware.servers.runtimeprotect.IndexedPlugin;
import optic_fusion1.antimalware.servers.runtimeprotect.PluginIndex;
import optic_fusion1.antimalware.utils.I18n;

import java.io.File;
import java.net.URISyntaxException;
import java.util.Objects;

public final class RuntimeUtils {

  private static final PluginIndex PLUGIN_INDEX = AntiMalware.getInstance().getCommandLineParser().getPluginIndex();

  private RuntimeUtils() {
  }

  public static File getSourceJar(Class<?> clazz) {
    try {
      return new File(Objects.requireNonNull(clazz, I18n.tl("clazz_is_null", clazz)).getProtectionDomain().getCodeSource().getLocation()
              .toURI());
    } catch (URISyntaxException ex) {
      throw new RuntimeException(I18n.tl("source_jar_not_found", clazz.getName()), ex);
    }
  }

  public static CallerInfo getCallerInfo() {
    StackTraceElement[] stacktrace = Thread.currentThread().getStackTrace();
    for (StackTraceElement e : stacktrace) {
      String callerClassName = e.getClassName();
      IndexedPlugin plugin = PLUGIN_INDEX.getClassOwner(callerClassName);
      if (plugin != null && !plugin.getJar().getName().equals("MCAntiMalware.jar")) {
        return new CallerInfo(plugin, callerClassName, e.getMethodName());
      }
    }
    return null;
  }
}
