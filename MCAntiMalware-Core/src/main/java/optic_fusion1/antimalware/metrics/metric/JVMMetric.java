/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.metrics.metric;

import optic_fusion1.antimalware.AntiMalware;
import optic_fusion1.antimalware.metrics.measurement.JVMMeasurement;

import java.lang.management.ManagementFactory;
import java.lang.management.OperatingSystemMXBean;
import java.lang.management.RuntimeMXBean;

public class JVMMetric implements Metric<JVMMeasurement> {

  @Override
  public JVMMeasurement getMeasurement(AntiMalware antiMalware) {
    Runtime runtime = Runtime.getRuntime();
    RuntimeMXBean runtimeMXBean = ManagementFactory.getRuntimeMXBean();
    OperatingSystemMXBean osMXBean = ManagementFactory.getOperatingSystemMXBean();
    return new JVMMeasurement(osMXBean.getSystemLoadAverage(), runtime.availableProcessors(),
            Thread.activeCount(), runtimeMXBean.getUptime());
  }

}
