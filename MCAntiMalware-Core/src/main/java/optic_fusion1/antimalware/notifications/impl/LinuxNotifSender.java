/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.notifications.impl;

import es.blackleg.jlibnotify.JLibnotify;
import es.blackleg.jlibnotify.JLibnotifyNotification;
import es.blackleg.jlibnotify.core.DefaultJLibnotifyLoader;
import es.blackleg.jlibnotify.exception.JLibnotifyInitException;
import es.blackleg.jlibnotify.exception.JLibnotifyLoadException;
import optic_fusion1.antimalware.Main;
import optic_fusion1.antimalware.check.CheckResult;
import optic_fusion1.antimalware.notifications.NotificationSender;
import optic_fusion1.antimalware.utils.I18n;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardCopyOption;

import static optic_fusion1.antimalware.AntiMalware.LOGGER;

public class LinuxNotifSender implements NotificationSender {

  private JLibnotify libNotify;
  private Path notificationImage;

  public LinuxNotifSender() {
    try {
      libNotify = new DefaultJLibnotifyLoader().load();
      libNotify.init("AntiMalware");
      notificationImage = File.createTempFile("notificationImage", "").toPath();
      Files.copy(Main.class.getResource("/index.jpg").openStream(), notificationImage,
                 StandardCopyOption.REPLACE_EXISTING);
    } catch (JLibnotifyLoadException | JLibnotifyInitException | IOException ex) {
      LOGGER.exception(ex);
    }
  }

  @Override
  public void sendNotification(Path path, CheckResult result) {
    JLibnotifyNotification notification = libNotify.createNotification(
            I18n.tl("notification_tool_tip_title"), I18n.tl("notification_tool_tip_text", path,
            result.getPlatform(), result.getType(), result.getFamily(), result.getVariant(),
            result.getClassNodePath()),
            notificationImage.toAbsolutePath().toString());
    notification.show();
  }

}
