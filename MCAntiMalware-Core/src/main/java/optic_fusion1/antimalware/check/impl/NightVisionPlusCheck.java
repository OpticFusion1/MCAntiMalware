/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.check.impl;

import optic_fusion1.antimalware.check.BaseCheck;
import optic_fusion1.antimalware.check.CacheContainer;
import optic_fusion1.antimalware.check.CheckResult;
import optic_fusion1.antimalware.configuration.file.FileConfiguration;
import org.objectweb.asm.tree.ClassNode;

import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

public class NightVisionPlusCheck extends BaseCheck {

  @Override
  public List<CheckResult> process(ClassNode classNode, Path rootFolder, Path zipFile, CacheContainer cache) {
    Path pluginYML = rootFolder.resolve("plugin.yml");
    if (Files.exists(pluginYML)) {
      FileConfiguration config = cache.fetchConfiguration(zipFile, pluginYML);
      if (config == null) {
        return new ArrayList<>();
      }
      if (config.isSet("author") && config.isSet("name")) {
        String author = config.getString("author");
        String name = config.getString("name");
        if (author.equals("PullingHoes") && name.equals("NightVisionPlus")) {
          double version = config.getDouble("version");
          if (version < 2.2) {
            List<CheckResult> result = new ArrayList<>();
            result.add(new CheckResult("Spigot", "MALWARE", "NightVisionPlus", "A", "plugin.yml", "", -1));
            return result;
          }
        }
      }
    }
    return new ArrayList<>();
  }
}
