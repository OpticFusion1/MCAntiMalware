/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.scanner;

import optic_fusion1.antimalware.AntiMalware;
import optic_fusion1.antimalware.utils.usbdetector.USBDeviceDetectorManager;
import optic_fusion1.antimalware.utils.usbdetector.events.DeviceEventType;
import optic_fusion1.antimalware.utils.usbdetector.events.IUSBDriveListener;
import optic_fusion1.antimalware.utils.usbdetector.events.USBStorageEvent;

import java.io.File;

public class USBDriveScanner implements IUSBDriveListener {

  private final Scanner scanner;

  public USBDriveScanner(AntiMalware antiMalware) {
    scanner = antiMalware.getScanner();
    USBDeviceDetectorManager driveDetector = new USBDeviceDetectorManager();
    driveDetector.addDriveListener(this);
    driveDetector.setPollingInterval(1);
  }

  @Override
  public void usbDriveEvent(USBStorageEvent event) {
    if (event.getEventType() != DeviceEventType.CONNECTED) {
      return;
    }
    for (File file : event.getStorageDevice().getRootDirectory().listFiles()) {
      if (file.isDirectory()) {
        scanner.addDirectoryToQueue(file.toPath());
      } else {
        scanner.addFileToQueue(file.toPath());
      }
    }
  }
}
