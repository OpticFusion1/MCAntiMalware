/*
* Copyright (C) 2021 Optic_Fusion1
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package optic_fusion1.antimalware.scanner.realtime;

import java.io.File;
import java.nio.file.Path;
import optic_fusion1.antimalware.AntiMalware;
import static optic_fusion1.antimalware.AntiMalware.LOGGER;
import optic_fusion1.antimalware.scanner.Scanner;

public class RealTimeScanner extends Scanner {

    public RealTimeScanner(AntiMalware antiMalware, File scanDirectory) {
        super(antiMalware, scanDirectory);
    }

    public void setupDirectoryWatcher() {
        DirectoryWatcher directoryWatcher = new DirectoryWatcher.Builder().addDirectories(getScanDirectory().toPath())
                .setPreExistingAsCreated(true).build(getAntiMalware(), (DirectoryWatcher.Event event, Path path) -> {
            switch (event) {
                case ENTRY_CREATE ->
                    addFileToQueue(path);
                case ENTRY_MODIFY ->
                    addFileToQueue(path);
                case ENTRY_DELETE -> {
                }
            }
        });

        try {
            directoryWatcher.startService(); // Actual watching starts here
        } catch (Exception e) {
            LOGGER.exception(e);
        }
    }

}
