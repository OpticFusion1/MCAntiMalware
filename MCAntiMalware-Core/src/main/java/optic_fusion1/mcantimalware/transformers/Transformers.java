package optic_fusion1.mcantimalware.transformers;

import java.util.logging.Logger;
import net.bytebuddy.ByteBuddy;
import net.bytebuddy.dynamic.ClassFileLocator;
import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;
import net.bytebuddy.dynamic.scaffold.TypeValidation;
import net.bytebuddy.implementation.MethodDelegation;
import static net.bytebuddy.matcher.ElementMatchers.nameStartsWith;
import static net.bytebuddy.matcher.ElementMatchers.named;
import net.bytebuddy.pool.TypePool;

import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.logging.CustomLogger;

public final class Transformers {

  private Transformers() {
  }

  public static void applyTransformers(ClassLoader parentClassLoader, ClassFileLocator serverJar, String version) {
    ByteBuddy buddy = new ByteBuddy();

    TypePool typePool = TypePool.Default.of(
            new ClassFileLocator.Compound(serverJar, ClassFileLocator.ForClassLoader.of(Logger.class.getClassLoader())));

		if (!version.isEmpty()) {
			version = version + ".";
		}
		CustomLogger logger = Main.getInstance().getLogger();

		try {
			buddy.rebase(typePool.describe("org.bukkit.craftbukkit." + version + "block.CraftBlock").resolve(), serverJar)
					.method(nameStartsWith("setType").or(nameStartsWith("setData")))
					.intercept(MethodDelegation.to(CraftBlockTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit." + version + "block.CraftBlock doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.event.player.AsyncPlayerChatEvent").resolve(), serverJar)
					.method(named("setMessage").or(named("setCancelled")))
					.intercept(MethodDelegation.to(AsyncPlayerChatEventTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.event.player.AsyncPlayerChatEvent doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.event.player.PlayerChatEvent").resolve(), serverJar)
					.method(named("setMessage").or(named("setCancelled")))
					.intercept(MethodDelegation.to(PlayerChatEventTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.event.player.PlayerChatEvent doesn't exist!");
		}

		try {
			buddy.with(TypeValidation.DISABLED)
					.rebase(typePool.describe("org.bukkit.event.server.ServerListPingEvent").resolve(), serverJar)
					.method(named("setMotd").or(named("setMaxPlayers")))
					.intercept(MethodDelegation.to(ServerListPingEventTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.event.server.ServerListPingEvent doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.plugin.SimplePluginManager").resolve(), serverJar)
					.method(nameStartsWith("disablePlugin").or(named("enablePlugin")))
					.intercept(MethodDelegation.to(SimplePluginManagerTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.plugin.SimplePluginManager doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.craftbukkit." + version + "entity.CraftEntity").resolve(), serverJar)
					.method(named("teleport")
							.or(named("setPassenger").or(named("setVelocity").or(named("setFireTicks").or(named("setMomentum"))))))
					.intercept(MethodDelegation.to(CraftEntityTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit." + version + "entity.CraftEntity doesn't exist!");
		}

		try {
			buddy
					.rebase(typePool.describe("org.bukkit.craftbukkit." + version + "inventory.CraftInventory").resolve(),
							serverJar)
					.method(named("getContents").or(named("setContents").or(named("addItem"))))
					.intercept(MethodDelegation.to(CraftInventoryTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit." + version + "inventory.CraftInventory doesn't exist!");
		}

		try {
			buddy.with(TypeValidation.DISABLED)
					.rebase(typePool.describe("org.bukkit.craftbukkit." + version + "entity.CraftPlayer").resolve(), serverJar)
					.method(nameStartsWith("send").or(nameStartsWith("play").or(nameStartsWith("set")
							.or(named("chat").or(named("kickPlayer").or(named("performCommand").or(named("teleport"))))))))
					.intercept(MethodDelegation.to(CraftPlayerTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit." + version + "entity.CraftPlayer doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.craftbukkit." + version + "CraftServer").resolve(), serverJar)
					.method(nameStartsWith("broadcast").or(nameStartsWith("dispatch")))
					.intercept(MethodDelegation.to(CraftServerTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit." + version + "CraftServer doesn't exist!");
		}

		try {
			buddy.rebase(typePool.describe("org.bukkit.craftbukkit.inventory.CraftPlayerInventory").resolve(), serverJar)
					.method(named("setItemInHand").or(named("setBoots").or(named("setLeggings").or(named("setChestplate")
							.or(named("setHelmet").or(named("setItem").or(nameStartsWith("remove").or(nameStartsWith("clear")))))))))
					.intercept(MethodDelegation.to(CraftInventoryPlayerTransformer.class)).make()
					.load(parentClassLoader, ClassLoadingStrategy.Default.INJECTION);
		} catch (Exception e) {
			logger.info("Class org.bukkit.craftbukkit.inventory.CraftPlayerInventory doesn't exist!");
		}
	}

}
