package optic_fusion1.mcantimalware.utils;

import org.objectweb.asm.Opcodes;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.IntInsnNode;
import org.objectweb.asm.tree.LdcInsnNode;

public final class ByteCodeUtils implements Opcodes {

  private ByteCodeUtils() {}

  public static boolean matches(AbstractInsnNode node, int value) {
    int opCode = node.getOpcode();
    if (opCode == ICONST_0 && value == 0
        || opCode == ICONST_1 && value == 1
        || opCode == ICONST_2 && value == 2
        || opCode == ICONST_3 && value == 3
        || opCode == ICONST_4 && value == 4
        || opCode == ICONST_5 && value == 5) {
      return true;
    }
    if (node.getOpcode() == BIPUSH || node.getOpcode() == SIPUSH) {
      return ((IntInsnNode) node).operand == value;
    } else if (node.getOpcode() == LDC) {
      Object cst = ((LdcInsnNode) node).cst;
      return cst instanceof Integer && cst.equals(value);
    }
    return false;
  }
}
