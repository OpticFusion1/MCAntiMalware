package optic_fusion1.mcantimalware.servers.paper;

import java.io.File;
import java.security.Permission;

import optic_fusion1.mcantimalware.exceptions.FormattedSecurityException;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.CallerInfo;
import optic_fusion1.mcantimalware.runtimeprotect.callerinfo.RuntimeUtils;

public class PaperPatchingSecurityManager extends SecurityManager {

	private String paperPatchedJar = null;
	
	@Override
	public void checkPermission(Permission perm) {
		checkPermission0(perm, null);
	}

	@Override
	public void checkPermission(Permission perm, Object context) {
		checkPermission0(perm, context);
	}

	private void checkPermission0(Permission perm, Object context) {
		if (perm.getName().equals("setSecurityManager")) {
			CallerInfo callerInfo = RuntimeUtils.getCallerInfo();
			if (callerInfo != null) {
				File pluginJar = callerInfo.getPlugin().getJar();
				throw new FormattedSecurityException("{0} tried setting the SecurityManager {0} MIGHT be malicious", pluginJar);
			}
		}
	}
	
	@Override
  public void checkRead(String file) {
    if(file.contains("patched_") && file.contains(".jar")) {
    	paperPatchedJar = file;
    }
  }
	
	@Override
  public void checkWrite(String file) {
    if(file.contains("patched_") && file.contains(".jar")) {
    	paperPatchedJar = file;
    }
  }

	public String getPaperPatchedJarFile() {
		return paperPatchedJar;
	}
	
	@Override
	public void checkExit(int status) {
		throw new SecurityException("Paper isn't allowed to exit during patching!");
	}

}
