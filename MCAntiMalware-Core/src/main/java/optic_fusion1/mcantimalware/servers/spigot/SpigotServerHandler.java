package optic_fusion1.mcantimalware.servers.spigot;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.FileSystem;
import java.nio.file.Files;
import java.util.List;

import optic_fusion1.mcantimalware.servers.ServerHandler;
import optic_fusion1.mcantimalware.utils.I18n;
import optic_fusion1.mcantimalware.utils.ReflectionUtils;
import optic_fusion1.mcantimalware.utils.Utils;

public class SpigotServerHandler extends ServerHandler {

  private String version;

  @Override
  protected boolean prepareServer() {
    if (!getServerFile().exists()) {
      logger.info(I18n.tl("file_doesn't_exist", getServerFile()));
      return false;
    }
    this.version = ReflectionUtils.getVersion(getServerFile());
    if (version.equals(I18n.tl("version_used_not_found"))) {
      return false;
    }
    return true;
  }

  @Override
  protected void startServer() {
    try {
      URL jarURL = getServerFile().toURI().toURL();
      final ClassLoader parentClassLoader = createClassLoader(jarURL);

      if (commandLineParser.shouldUseTransformers()) {
        applyTransformers(parentClassLoader, getServerFile(), version);
      }

      Thread childProcess = createChildProcess(parentClassLoader, "org.bukkit.craftbukkit.Main", "main",
              new Class[]{String[].class}, new Object[]{getServerArguments()});

      canUseSpigotMethods = true;
      logger.info(I18n.tl("sm_server_hooked", version));
      if (commandLineParser.shouldDumpClasses()) {
        logger.info(I18n.tl("sm_dumping_classes"));
      }
    } catch (IOException e) {
      logger.exception(e);
    }
  }

  @Override
  protected boolean checkServerType(File serverFile) {
    try (FileSystem fs = Utils.fileSystemForZip(serverFile.toPath())) {
      if (Files.exists(fs.getPath("META-INF/MANIFEST.MF"))) {
        List<String> lines = Files.readAllLines(fs.getPath("META-INF/MANIFEST.MF"));
        for(String line : lines) {
        	if(line.contains("org.bukkit.craftbukkit.Main")) {
        		return true;
        	}
        }
      }
    } catch (IOException e) {
      logger.exception(e);
    }
    return false;
  }

  @Override
  public String getServerTypeName() {
    return "Spigot";
  }

}
