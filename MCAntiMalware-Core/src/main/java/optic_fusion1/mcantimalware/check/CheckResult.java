package optic_fusion1.mcantimalware.check;

public class CheckResult {

  private final String platform;
  private final String type;
  private final String family;
  private final String variant;
  private String sourceFilePath;
  private String classNodePath;
  private int line;

  public CheckResult(String platform, String type, String family) {
    this(platform, type, family, "A");
  }

  public CheckResult(String platform, String type, String family, String variant) {
    this(platform, type, family, variant, null, null, -1);
  }

  public CheckResult(String platform, String type, String family, String variant, String sourceFilePath,
          String classNodePath, int line) {
    this.platform = platform;
    this.type = type;
    this.family = family;
    this.variant = variant;
    this.sourceFilePath = sourceFilePath;
    this.classNodePath = classNodePath;
    this.line = line;
  }

  public String getPlatform() {
    return platform;
  }

  public String getType() {
    return type;
  }

  public String getFamily() {
    return family;
  }

  public String getVariant() {
    return variant;
  }

  public String getSourceFilePath() {
    return sourceFilePath;
  }

  public String getClassNodePath() {
    return classNodePath;
  }

  public int getLine() {
    return line;
  }

  public void setSourceFilePath(String sourceFilePath) {
    this.sourceFilePath = sourceFilePath;
  }

  public void setClassNodePath(String classNodePath) {
    this.classNodePath = classNodePath;
  }

  public void setLine(int line) {
    this.line = line;
  }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((classNodePath == null) ? 0 : classNodePath.hashCode());
		result = prime * result + ((family == null) ? 0 : family.hashCode());
		result = prime * result + ((platform == null) ? 0 : platform.hashCode());
		result = prime * result + ((sourceFilePath == null) ? 0 : sourceFilePath.hashCode());
		result = prime * result + ((type == null) ? 0 : type.hashCode());
		result = prime * result + ((variant == null) ? 0 : variant.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CheckResult other = (CheckResult) obj;
		if (classNodePath == null) {
			if (other.classNodePath != null)
				return false;
		} else if (!classNodePath.equals(other.classNodePath))
			return false;
		if (family == null) {
			if (other.family != null)
				return false;
		} else if (!family.equals(other.family))
			return false;
		if (platform == null) {
			if (other.platform != null)
				return false;
		} else if (!platform.equals(other.platform))
			return false;
		if (sourceFilePath == null) {
			if (other.sourceFilePath != null)
				return false;
		} else if (!sourceFilePath.equals(other.sourceFilePath))
			return false;
		if (type == null) {
			if (other.type != null)
				return false;
		} else if (!type.equals(other.type))
			return false;
		if (variant == null) {
			if (other.variant != null)
				return false;
		} else if (!variant.equals(other.variant))
			return false;
		return true;
	}
 

}
