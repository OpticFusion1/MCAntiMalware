package optic_fusion1.mcantimalware.check;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.codec.digest.DigestUtils;

public class CheckManager {

  private final List<BaseCheck> checks = new ArrayList<>();
  private HashMap<File, Boolean> checksumCache = new HashMap<>();

  public void addCheck(BaseCheck check) {
    checks.add(check);
  }

  public List<BaseCheck> getChecks() {
    return Collections.unmodifiableList(checks);
  }

  public boolean isClassPathBlacklisted(String string) {
    return checks.stream().anyMatch(
            (check) -> (check.getBlacklistedClassPaths().stream().anyMatch((classPath) -> (string.startsWith(classPath)))));
  }

  public boolean isStringBlacklisted(String string) {
    return checks.stream().anyMatch(
            (check) -> (check.getBlacklistedStrings().stream().anyMatch((blacklistedString) -> (blacklistedString.equals(string)))));
  }

  public boolean isPluginJarBlacklisted(File file) {
    if(checksumCache.containsKey(file)){
      return checksumCache.get(file);
    }
    try {
      String checksum = DigestUtils.sha1Hex(new FileInputStream(file));
      boolean blacklisted = checks.stream().anyMatch((check) -> (check.getBlacklistedChecksums().contains(checksum)));
      checksumCache.put(file, blacklisted);
      return blacklisted;
    } catch (FileNotFoundException ex) {
      Logger.getLogger(CheckManager.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      Logger.getLogger(CheckManager.class.getName()).log(Level.SEVERE, null, ex);
    }
    return false;
  }
}
