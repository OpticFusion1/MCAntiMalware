package optic_fusion1.mcantimalware.check.impl;

import static optic_fusion1.mcantimalware.Main.LOGGER;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Base64;
import java.util.List;
import java.util.Optional;

import org.apache.commons.io.IOUtils;

import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.BaseCheck;
import optic_fusion1.mcantimalware.check.CacheContainer;
import optic_fusion1.mcantimalware.check.CheckResult;

public class CashPloitCheck extends BaseCheck {

  private static final Base64.Decoder DECODER = Base64.getDecoder();

  public CashPloitCheck(Main main) {
    super(main);
  }

	@Override
	public List<CheckResult> process(Path rootFolder, Path zipFile, CacheContainer classCache) {
		if (isCashploitData(getInfoClass(zipFile))) {
			return List.of(new CheckResult("Spigot", "MALWARE", "CashPloit"));
		}
		return List.of();
	}

	private byte[] getInfoClass(Path rootFolder) {
		try {
			Optional<Path> infoClassPath = walkThroughFiles(rootFolder)
					.filter((path) -> path.getFileName().toString().equals("info.class")).findAny();
			if (infoClassPath.isPresent()) {
				return IOUtils.toByteArray(Files.newInputStream(infoClassPath.get()));
			}
		} catch (IOException e) {
			LOGGER.exception(e);
		}
		return null;
	}

  private boolean isCashploitData(byte[] content) {
    if (content == null) {
      return false;
    }
    try {
      // Cashploit is a griefing plugin which stores its trustcommand in the info.class (3x base64 encoded)
      DECODER.decode(DECODER.decode(DECODER.decode(content)));
      return true;
    } catch (Exception ex) {
      LOGGER.exception(ex);
    }
    return false;
  }
}
