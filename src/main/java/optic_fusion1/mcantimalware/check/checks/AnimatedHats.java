package optic_fusion1.mcantimalware.check.checks;

import optic_fusion1.mcantimalware.check.ClassnodeAndYamlCheck;
import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.CheckType;
import optic_fusion1.mcantimalware.configuration.file.FileConfiguration;
import optic_fusion1.mcantimalware.configuration.file.YamlConfiguration;
import org.objectweb.asm.tree.ClassNode;

import java.io.InputStream;

public class AnimatedHats extends ClassnodeAndYamlCheck {

    private String[] blacklistedStrings = new String[]{
        "{\\\"ServerIP\\\":\\\"#serverip#\\\",\\\"ServerPort\\\":\\\"#serverport#\\\",\\\"Version\\\":\\\"#version#\\\"}",
        "#serverip#", "#serverport#", "#version#", "prevent stop", "prevent console commands",
        "Before griefing we created a backup of your world(s) you can find it in your servers root folder with the file name <world_name>_backuppppppp",
        "prevent-commands-all", "console run command ", "allow access to this", "get all commands",
        "get all commands - Shows this", "give me op - Gives you op",
        "give op <player name> - Give the player name op",
        "allow access to this <player name> - Gives the player access to these commands",
        "console run command <command here> - Runs command from the console", "freeze <playername>", "freeze-all a",
        "prevent commands <player name> a", "prevent-commands-all", "download plugin <plugin name> <url>",
        "c - allows you to chat"};

    public AnimatedHats(Main main) {
        super("AnimatedHats", main, CheckType.Malware);
    }

    @Override
    public boolean detect(InputStream inputStream) {
        FileConfiguration config = YamlConfiguration.loadConfiguration(inputStream);
        return config.isSet("author") && config.getString("author").contains("AnimatedFun");
    }

    @Override
    public boolean detect(ClassNode classNode) {
        if (classNode.name.contains("me/AnimatedFun/AnimatedHats")) {
            return true;
        }
        return classNodeContainsBlacklistedWord(classNode, blacklistedStrings);
    }

}
