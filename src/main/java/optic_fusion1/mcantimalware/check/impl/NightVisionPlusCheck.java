package optic_fusion1.mcantimalware.check.impl;

import java.io.IOException;
import java.io.InputStream;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;
import optic_fusion1.mcantimalware.Main;
import optic_fusion1.mcantimalware.check.BaseCheck;
import optic_fusion1.mcantimalware.configuration.file.FileConfiguration;
import optic_fusion1.mcantimalware.configuration.file.YamlConfiguration;
import org.objectweb.asm.ClassReader;
import org.objectweb.asm.tree.ClassNode;

public class NightVisionPlusCheck extends BaseCheck {

    private boolean beforeFix;

    public NightVisionPlusCheck(Main main, String name) {
        super(main, name);
    }

    @Override
    public boolean process(String fileName, ZipFile zipFile) {
        Enumeration<? extends ZipEntry> entries = zipFile.entries();
        InputStream inputStream = null;
        while (entries.hasMoreElements()) {
            ZipEntry current = entries.nextElement();
            try {
                inputStream = zipFile.getInputStream(current);
                if (isPluginYmlFile(current.getName()) || isBungeeYmlFile(current.getName())) {
                    FileConfiguration config = YamlConfiguration.loadConfiguration(inputStream);
                    if (config.isSet("author") && config.isSet("name")) {
                        String author = config.getString("author");
                        String name = config.getString("name");
                        if (author.equals("PullingHoes") && name.equals("NightVisionPlus")) {
                            double version = config.getDouble("version");
                            if (version < 2.2) {
                                beforeFix = true;
                                setClassNodePath("plugin.yml");
                                inputStream.close();
                                return true;
                            }
                        }
                    }
                }
                if (validClassPath(current.getName())) {
                    ClassReader reader = new ClassReader(inputStream);
                    ClassNode classNode = new ClassNode();
                    reader.accept(classNode, 0);
                    if (classNode.name.contains("com/pullinghoes/nightvisionplus") && beforeFix) {
                        setClassNodePath(classNode.name);
                        setSourceFilePath(classNode.sourceFile);
                        inputStream.close();
                        return true;
                    }
                }
                inputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(DirectLeaksCheck.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (inputStream != null) {
            try {
                inputStream.close();
            } catch (IOException ex) {
                Logger.getLogger(BaseCheck.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return false;
    }

}
