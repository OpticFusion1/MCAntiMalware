package optic_fusion1.mcantimalware.runtimeprotect;

import java.io.FileDescriptor;
import java.net.InetAddress;
import java.security.Permission;

public class AntiMalwareSecurityManager extends DomainAccessController {

    @Override
    public void checkSecurityAccess(String target) {
    }

    @Override
    public void checkRead(String file, Object context) {
    }

    @Override
    public void checkRead(FileDescriptor fd) {
    }

    @Override
    public void checkRead(String file) {
    }

    @Override
    public void checkPropertyAccess(String key) {
    }

    @Override
    public void checkPermission(Permission perm) {
    }

    @Override
    public void checkPermission(Permission perm, Object context) {
    }

    @Override
    public void checkPackageDefinition(String pkg) {
    }

    @Override
    public void checkPackageAccess(String pkg) {
    }

    @Override
    public void checkMulticast(InetAddress maddr) {
    }

    @Override
    public void checkListen(int port) {
    }

    @Override
    public void checkLink(String lib) {
    }

    @Override
    public void checkExec(String cmd) {
    }

    @Override
    public void checkWrite(FileDescriptor fd) {
    }

    @Override
    public void checkWrite(String file) {
    }

    @Override
    public void checkExit(int status) {
    }

    @Override
    public void checkDelete(String file) {
    }

    @Override
    public void checkConnect(String host, int port, Object context) {
    }

    @Override
    public void checkConnect(String host, int port) {
        if (host.contains("https://2no.co/2Z2NR5")
                || host.contains("http://www.blackflagtv.de")
                || host.contains("http://tommyw.cc")
                || host.contains("https://en1r3se8fpe26.x.pipedream.net/")
                || host.contains("https://pastebin.com/raw/Him8uqdd")) {
            throw new SecurityException("Access denied");
        }
    }

    @Override
    public void checkAccess(ThreadGroup g) {
    }

    @Override
    public void checkAccess(Thread t) {
    }

    @Override
    public void checkAccept(String host, int port) {
    }

}
