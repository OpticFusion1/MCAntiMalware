package optic_fusion1.mcantimalware.utils.taskchain;

import co.aikar.taskchain.AsyncQueue;
import co.aikar.taskchain.GameInterface;
import co.aikar.taskchain.TaskChainFactory;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class AntiMalwareGameInterface implements GameInterface {

    private final AsyncQueue asyncQueue;
    private final ScheduledExecutorService scheduledExecutorService;

    public AntiMalwareGameInterface(AsyncQueue asyncQueue) {
        this.asyncQueue = asyncQueue;
        scheduledExecutorService = Executors.newSingleThreadScheduledExecutor(r -> {
            Thread thread = new Thread(r);
            thread.setName("AntiMalware/Check thread");
            return thread;
        });
    }

    @Override
    public boolean isMainThread() {
        // java by default names the main thread "main"
        // so no problems here
        return Thread.currentThread().getName().equalsIgnoreCase("main");
    }

    @Override
    public AsyncQueue getAsyncQueue() {
        return asyncQueue;
    }

    @Override
    public void postToMain(Runnable run) {
        run.run();
    }

    @Override
    public void scheduleTask(
            int seconds,
            Runnable run
    ) {
        scheduledExecutorService.schedule(run, seconds, TimeUnit.SECONDS);
    }

    @Override
    public void registerShutdownHandler(TaskChainFactory factory) {
        factory.shutdown(60, TimeUnit.SECONDS);
    }
}
