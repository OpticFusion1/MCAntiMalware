package optic_fusion1.mcantimalware.utils;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Type;
import java.net.URL;
import java.nio.charset.Charset;

import org.apache.commons.io.FileUtils;
import org.codehaus.plexus.util.xml.pull.XmlPullParserException;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import optic_fusion1.mcantimalware.Main;

public class Updater {
	private static boolean updateAvailable;
	private static boolean updating;
	private static Gson gson = new Gson();
	private static String latestVersion;

	public static void checkForUpdate() throws FileNotFoundException, IOException, XmlPullParserException {
		System.out.println("[UPDATER] Checking for updates...");
		try {
			String latestVersionInfo = readFrom("https://api.spiget.org/v2/resources/64982/versions/latest");
			Type type = new TypeToken<JsonObject>() {
			}.getType();
			JsonObject object = gson.fromJson(latestVersionInfo, type);
			latestVersion = object.get("name").getAsString();
			updateAvailable = !latestVersion.equals(Main.version);
		} catch (Exception exception) {
			exception.printStackTrace();
		}
	}

	public static void update() throws IOException {
		try {
			checkForUpdate();
		} catch (XmlPullParserException e) {
			e.printStackTrace();
		}
		File target = new File("MCAntiMalware.jar");
		String file = target.toString();

		if (updateAvailable && !updating) {
			System.out.println("[UPDATER] Update found, downloading now!");
			URL url = new URL("http://aqua.api.spiget.org/v2/resources/64982/download");
			FileUtils.copyURLToFile(url, target);
			System.out.println("[UPDATER] Update done! Saved as: " + file);
		}
		else {
			System.out.println("[UPDATER] No update found!");
		}
	}

	private static String readFrom(String url) throws IOException {
		try (InputStream is = new URL(url).openStream()) {
			BufferedReader rd = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")));

			StringBuilder sb = new StringBuilder();
			int cp;
			while ((cp = rd.read()) != -1) {
				sb.append((char) cp);
			}

			return sb.toString();
		}
	}
}
