package optic_fusion1.mcantimalware.utils;

import org.objectweb.asm.Opcodes;
import org.objectweb.asm.tree.AbstractInsnNode;
import org.objectweb.asm.tree.IntInsnNode;
import org.objectweb.asm.tree.LdcInsnNode;

public class ByteCodeUtils implements Opcodes {

    public static boolean matches(AbstractInsnNode node, int value) {
        if (node.getOpcode() == ICONST_0 && value == 0)
            return true;
        if (node.getOpcode() == ICONST_1 && value == 1)
            return true;
        if (node.getOpcode() == ICONST_2 && value == 2)
            return true;
        if (node.getOpcode() == ICONST_3 && value == 3)
            return true;
        if (node.getOpcode() == ICONST_4 && value == 4)
            return true;
        if (node.getOpcode() == ICONST_5 && value == 4)
            return true;
        if (node.getOpcode() == BIPUSH || node.getOpcode() == SIPUSH) {
            return ((IntInsnNode) node).operand == value;
        } else if (node.getOpcode() == LDC) {
            Object cst = ((LdcInsnNode) node).cst;
            return cst instanceof Integer && cst.equals(value);
        }
        return false;
    }

}
