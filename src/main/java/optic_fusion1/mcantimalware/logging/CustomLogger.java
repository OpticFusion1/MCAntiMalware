package optic_fusion1.mcantimalware.logging;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.Marker;
import org.apache.logging.log4j.message.Message;

public class CustomLogger {

    private final Logger logger;
    public static Level MALICIOUS;
    public static Level EXCEPTION;
    public static Level NOTICE;
    public static Level ALERT;
    public static Level EMERGENCY;

    private CustomLogger(String loggerName) {
        logger = LogManager.getLogger(loggerName);
        MALICIOUS = Level.getLevel("MALICIOUS");
        EXCEPTION = Level.getLevel("EXCEPTION");
        NOTICE = Level.getLevel("NOTICE");
        ALERT = Level.getLevel("ALERT");
        EMERGENCY = Level.getLevel("EMERGENCY");
    }

    public static CustomLogger getLogger(String loggerName) {
        return new CustomLogger(loggerName);
    }

    public static CustomLogger getLogger(Class<?> clazz) {
        return new CustomLogger(clazz.getName());
    }

    public Logger getLogger() {
        return logger;
    }

    public void malicious(Message msg) {
        logger.log(MALICIOUS, msg);
    }

    public void malicious(Object object) {
        logger.log(MALICIOUS, object);
    }

    public void malicious(String string) {
        logger.log(MALICIOUS, string);
    }

    public void malicious(Marker marker, Message msg) {
        logger.log(MALICIOUS, marker, msg);
    }

    public void malicious(Marker marker, Object object) {
        logger.log(MALICIOUS, marker, object);
    }

    public void malicious(Marker marker, String string) {
        logger.log(MALICIOUS, marker, string);
    }

    public void malicious(Message msg, Throwable thrwbl) {
        logger.log(MALICIOUS, msg, thrwbl);
    }

    public void malicious(Object object, Throwable thrwbl) {
        logger.log(MALICIOUS, object, thrwbl);
    }

    public void malicious(String string, Object... os) {
        logger.log(MALICIOUS, string, os);
    }

    public void malicious(String string, Throwable thrwbl) {
        logger.log(MALICIOUS, string, thrwbl);
    }

    public void malicious(Marker marker, Message msg, Throwable thrwbl) {
        logger.log(MALICIOUS, marker, msg, thrwbl);
    }

    public void malicious(Marker marker, Object object, Throwable thrwbl) {
        logger.log(MALICIOUS, marker, object, thrwbl);
    }

    public void malicious(Marker marker, String string, Object... os) {
        logger.log(MALICIOUS, marker, string, os);
    }

    public void malicious(Marker marker, String string, Throwable thrwbl) {
        logger.log(MALICIOUS, marker, string, thrwbl);
    }

    public void exception(Message msg) {
        logger.log(EXCEPTION, msg);
    }

    public void exception(Object object) {
        logger.log(EXCEPTION, object);
    }

    public void exception(String string) {
        logger.log(EXCEPTION, string);
    }

    public void exception(Marker marker, Message msg) {
        logger.log(EXCEPTION, marker, msg);
    }

    public void exception(Marker marker, Object object) {
        logger.log(EXCEPTION, marker, object);
    }

    public void exception(Marker marker, String string) {
        logger.log(EXCEPTION, marker, string);
    }

    public void exception(Message msg, Throwable thrwbl) {
        logger.log(EXCEPTION, msg, thrwbl);
    }

    public void exception(Object object, Throwable thrwbl) {
        logger.log(EXCEPTION, object, thrwbl);
    }

    public void exception(String string, Object... os) {
        logger.log(EXCEPTION, string, os);
    }

    public void exception(String string, Throwable thrwbl) {
        logger.log(EXCEPTION, string, thrwbl);
    }

    public void exception(Marker marker, Message msg, Throwable thrwbl) {
        logger.log(EXCEPTION, marker, msg, thrwbl);
    }

    public void exception(Marker marker, Object object, Throwable thrwbl) {
        logger.log(EXCEPTION, marker, object, thrwbl);
    }

    public void exception(Marker marker, String string, Object... os) {
        logger.log(EXCEPTION, marker, string, os);
    }

    public void exception(Marker marker, String string, Throwable thrwbl) {
        logger.log(EXCEPTION, marker, string, thrwbl);
    }

    public void debug(Message msg) {
        logger.debug(msg);
    }

    public void debug(Object object) {
        logger.debug(object);
    }

    public void debug(String string) {
        logger.debug(string);
    }

    public void debug(Marker marker, Message msg) {
        logger.debug(marker, msg);
    }

    public void debug(Marker marker, Object object) {
        logger.debug(marker, object);
    }

    public void debug(Marker marker, String string) {
        logger.debug(marker, string);
    }

    public void debug(Message msg, Throwable thrwbl) {
        logger.debug(msg, thrwbl);
    }

    public void debug(Object object, Throwable thrwbl) {
        logger.debug(object, thrwbl);
    }

    public void debug(String string, Object... os) {
        logger.debug(string, os);
    }

    public void debug(String string, Throwable thrwbl) {
        logger.debug(string, thrwbl);
    }

    public void debug(Marker marker, Message msg, Throwable thrwbl) {
        logger.debug(marker, msg, thrwbl);
    }

    public void debug(Marker marker, Object object, Throwable thrwbl) {
        logger.debug(marker, object, thrwbl);
    }

    public void debug(Marker marker, String string, Object... os) {
        logger.debug(marker, string, os);
    }

    public void debug(Marker marker, String string, Throwable thrwbl) {
        logger.debug(marker, string, thrwbl);
    }

    public void notice(Message msg) {
        logger.log(NOTICE, msg);
    }

    public void notice(Object object) {
        logger.log(NOTICE, object);
    }

    public void notice(String string) {
        logger.log(NOTICE, string);
    }

    public void notice(Marker marker, Message msg) {
        logger.log(NOTICE, marker, msg);
    }

    public void notice(Marker marker, Object object) {
        logger.log(NOTICE, marker, object);
    }

    public void notice(Marker marker, String string) {
        logger.log(NOTICE, marker, string);
    }

    public void notice(Message msg, Throwable thrwbl) {
        logger.log(NOTICE, msg, thrwbl);
    }

    public void notice(Object object, Throwable thrwbl) {
        logger.log(NOTICE, object, thrwbl);
    }

    public void notice(String string, Object... os) {
        logger.log(NOTICE, string, os);
    }

    public void notice(String string, Throwable thrwbl) {
        logger.log(NOTICE, string, thrwbl);
    }

    public void notice(Marker marker, Message msg, Throwable thrwbl) {
        logger.log(NOTICE, marker, msg, thrwbl);
    }

    public void notice(Marker marker, Object object, Throwable thrwbl) {
        logger.log(NOTICE, marker, object, thrwbl);
    }

    public void notice(Marker marker, String string, Object... os) {
        logger.log(NOTICE, marker, string, os);
    }

    public void notice(Marker marker, String string, Throwable thrwbl) {
        logger.log(NOTICE, marker, string, thrwbl);
    }

    public void error(Message msg) {
        logger.error(msg);
    }

    public void error(Object object) {
        logger.error(object);
    }

    public void error(String string) {
        logger.error(string);
    }

    public void error(Marker marker, Message msg) {
        logger.error(marker, msg);
    }

    public void error(Marker marker, Object object) {
        logger.error(marker, object);
    }

    public void error(Marker marker, String string) {
        logger.error(marker, string);
    }

    public void error(Message msg, Throwable thrwbl) {
        logger.error(msg, thrwbl);
    }

    public void error(Object object, Throwable thrwbl) {
        logger.error(object, thrwbl);
    }

    public void error(String string, Object... os) {
        logger.error(string, os);
    }

    public void error(String string, Throwable thrwbl) {
        logger.error(string, thrwbl);
    }

    public void error(Marker marker, Message msg, Throwable thrwbl) {
        logger.error(marker, msg, thrwbl);
    }

    public void error(Marker marker, Object object, Throwable thrwbl) {
        logger.error(marker, object, thrwbl);
    }

    public void error(Marker marker, String string, Object... os) {
        logger.error(marker, string, os);
    }

    public void error(Marker marker, String string, Throwable thrwbl) {
        logger.error(marker, string, thrwbl);
    }

    public void alert(Message msg) {
        logger.log(ALERT, msg);
    }

    public void alert(Object object) {
        logger.log(ALERT, object);
    }

    public void alert(String string) {
        logger.log(ALERT, string);
    }

    public void alert(Marker marker, Message msg) {
        logger.log(ALERT, marker, msg);
    }

    public void alert(Marker marker, Object object) {
        logger.log(ALERT, marker, object);
    }

    public void alert(Marker marker, String string) {
        logger.log(ALERT, marker, string);
    }

    public void alert(Message msg, Throwable thrwbl) {
        logger.log(ALERT, msg, thrwbl);
    }

    public void alert(Object object, Throwable thrwbl) {
        logger.log(ALERT, object, thrwbl);
    }

    public void alert(String string, Object... os) {
        logger.log(ALERT, string, os);
    }

    public void alert(String string, Throwable thrwbl) {
        logger.log(ALERT, string, thrwbl);
    }

    public void alert(Marker marker, Message msg, Throwable thrwbl) {
        logger.log(ALERT, marker, msg, thrwbl);
    }

    public void alert(Marker marker, Object object, Throwable thrwbl) {
        logger.log(ALERT, marker, object, thrwbl);
    }

    public void alert(Marker marker, String string, Object... os) {
        logger.log(ALERT, marker, string, os);
    }

    public void alert(Marker marker, String string, Throwable thrwbl) {
        logger.log(ALERT, marker, string, thrwbl);
    }

    public void emergency(Message msg) {
        logger.log(EMERGENCY, msg);
    }

    public void emergency(Object object) {
        logger.log(EMERGENCY, object);
    }

    public void emergency(String string) {
        logger.log(EMERGENCY, string);
    }

    public void emergency(Marker marker, Message msg) {
        logger.log(EMERGENCY, marker, msg);
    }

    public void emergency(Marker marker, Object object) {
        logger.log(EMERGENCY, marker, object);
    }

    public void emergency(Marker marker, String string) {
        logger.log(EMERGENCY, marker, string);
    }

    public void emergency(Message msg, Throwable thrwbl) {
        logger.log(EMERGENCY, msg, thrwbl);
    }

    public void emergency(Object object, Throwable thrwbl) {
        logger.log(EMERGENCY, object, thrwbl);
    }

    public void emergency(String string, Object... os) {
        logger.log(EMERGENCY, string, os);
    }

    public void emergency(String string, Throwable thrwbl) {
        logger.log(EMERGENCY, string, thrwbl);
    }

    public void emergency(Marker marker, Message msg, Throwable thrwbl) {
        logger.log(EMERGENCY, marker, msg, thrwbl);
    }

    public void emergency(Marker marker, Object object, Throwable thrwbl) {
        logger.log(EMERGENCY, marker, object, thrwbl);
    }

    public void emergency(Marker marker, String string, Object... os) {
        logger.log(EMERGENCY, marker, string, os);
    }

    public void emergency(Marker marker, String string, Throwable thrwbl) {
        logger.log(EMERGENCY, marker, string, thrwbl);
    }

    public void fatal(Message msg) {
        logger.fatal(msg);
    }

    public void fatal(Object object) {
        logger.fatal(object);
    }

    public void fatal(String string) {
        logger.fatal(string);
    }

    public void fatal(Marker marker, Message msg) {
        logger.fatal(marker, msg);
    }

    public void fatal(Marker marker, Object object) {
        logger.fatal(marker, object);
    }

    public void fatal(Marker marker, String string) {
        logger.fatal(marker, string);
    }

    public void fatal(Message msg, Throwable thrwbl) {
        logger.fatal(msg, thrwbl);
    }

    public void fatal(Object object, Throwable thrwbl) {
        logger.fatal(object, thrwbl);
    }

    public void fatal(String string, Object... os) {
        logger.fatal(string, os);
    }

    public void fatal(String string, Throwable thrwbl) {
        logger.fatal(string, thrwbl);
    }

    public void fatal(Marker marker, Message msg, Throwable thrwbl) {
        logger.fatal(marker, msg, thrwbl);
    }

    public void fatal(Marker marker, Object object, Throwable thrwbl) {
        logger.fatal(marker, object, thrwbl);
    }

    public void fatal(Marker marker, String string, Object... os) {
        logger.fatal(marker, string, os);
    }

    public void fatal(Marker marker, String string, Throwable thrwbl) {
        logger.fatal(marker, string, thrwbl);
    }

    public void info(Message msg) {
        logger.info(msg);
    }

    public void info(Object object) {
        logger.info(object);
    }

    public void info(String string) {
        logger.info(string);
    }

    public void info(Marker marker, Message msg) {
        logger.info(marker, msg);
    }

    public void info(Marker marker, Object object) {
        logger.info(marker, object);
    }

    public void info(Marker marker, String string) {
        logger.info(marker, string);
    }

    public void info(Message msg, Throwable thrwbl) {
        logger.info(msg, thrwbl);
    }

    public void info(Object object, Throwable thrwbl) {
        logger.info(object, thrwbl);
    }

    public void info(String string, Object... os) {
        logger.info(string, os);
    }

    public void info(String string, Throwable thrwbl) {
        logger.info(string, thrwbl);
    }

    public void info(Marker marker, Message msg, Throwable thrwbl) {
        logger.info(marker, msg, thrwbl);
    }

    public void info(Marker marker, Object object, Throwable thrwbl) {
        logger.info(marker, object, thrwbl);
    }

    public void info(Marker marker, String string, Object... os) {
        logger.info(marker, string, os);
    }

    public void info(Marker marker, String string, Throwable thrwbl) {
        logger.info(marker, string, thrwbl);
    }

    public void warn(Message msg) {
        logger.warn(msg);
    }

    public void warn(Object object) {
        logger.warn(object);
    }

    public void warn(String string) {
        logger.warn(string);
    }

    public void warn(Marker marker, Message msg) {
        logger.warn(marker, msg);
    }

    public void warn(Marker marker, Object object) {
        logger.warn(marker, object);
    }

    public void warn(Marker marker, String string) {
        logger.warn(marker, string);
    }

    public void warn(Message msg, Throwable thrwbl) {
        logger.warn(msg, thrwbl);
    }

    public void warn(Object object, Throwable thrwbl) {
        logger.warn(object, thrwbl);
    }

    public void warn(String string, Object... os) {
        logger.warn(string, os);
    }

    public void warn(String string, Throwable thrwbl) {
        logger.warn(string, thrwbl);
    }

    public void warn(Marker marker, Message msg, Throwable thrwbl) {
        logger.warn(marker, msg, thrwbl);
    }

    public void warn(Marker marker, Object object, Throwable thrwbl) {
        logger.warn(marker, object, thrwbl);
    }

    public void warn(Marker marker, String string, Object... os) {
        logger.warn(marker, string, os);
    }

    public void warn(Marker marker, String string, Throwable thrwbl) {
        logger.warn(marker, string, thrwbl);
    }

    public void trace(Message msg) {
        logger.trace(msg);
    }

    public void trace(Object object) {
        logger.trace(object);
    }

    public void trace(String string) {
        logger.trace(string);
    }

    public void trace(Marker marker, Message msg) {
        logger.trace(marker, msg);
    }

    public void trace(Marker marker, Object object) {
        logger.trace(marker, object);
    }

    public void trace(Marker marker, String string) {
        logger.trace(marker, string);
    }

    public void trace(Message msg, Throwable thrwbl) {
        logger.trace(msg, thrwbl);
    }

    public void trace(Object object, Throwable thrwbl) {
        logger.trace(object, thrwbl);
    }

    public void trace(String string, Object... os) {
        logger.trace(string, os);
    }

    public void trace(String string, Throwable thrwbl) {
        logger.trace(string, thrwbl);
    }

    public void trace(Marker marker, Message msg, Throwable thrwbl) {
        logger.trace(marker, msg, thrwbl);
    }

    public void trace(Marker marker, Object object, Throwable thrwbl) {
        logger.trace(marker, object, thrwbl);
    }

    public void trace(Marker marker, String string, Object... os) {
        logger.trace(marker, string, os);
    }

    public void trace(Marker marker, String string, Throwable thrwbl) {
        logger.trace(marker, string, thrwbl);
    }

}
